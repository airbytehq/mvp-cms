<script>
	import Readme from '../../README.md'

	import SvelteTable from 'svelte-table';
	import TableCellName from './TableCellName.svelte';
	import DarkMode from './DarkMode.svelte';
	import {showLogos, showInternalConnectors} from './shared.js';
	const toggleLogos = () => $showLogos = !$showLogos
	const toggleInternal = () => $showInternalConnectors = !$showInternalConnectors

	/** @type {import('./$types').PageData} */
	export let data;
	const rows = data.connectors;
	// console.log({ rows });
	// https://github.com/dasDaniel/svelte-table#sample-data-and-config
	const columns = [
		{
			key: 'name',
			title: 'name',
			value: (v) => v.name,
			sortable: true,
			renderComponent: TableCellName,
			filterOptions: ['source', 'destination'],
			filterValue: v => v.name.split('-')[0]
		},
		{
			key: 'dateAdded',
			title: 'dateAdded',
			value: (v) => v.dateAdded,
			sortable: true
		},
		// {
		// 	key: 'displayName',
		// 	title: 'displayName',
		// 	value: (v) => v.displayName,
		// 	sortable: true
		// },
		// {
		//   key:'description',
		//   title: 'description',
		//   value: v=> v.description,
		//   sortable: true
		// },
		// {
		//   key:'iconUrl',
		//   title: 'iconUrl',
		//   value: v=> v.iconUrl,
		//   sortable: true
		// },
		{
			key: 'releaseStage',
			title: 'releaseStage',
			value: (v) => v.releaseStage,
			sortable: true,
			filterOptions: ['alpha', 'beta', 'generally_available', 'undefined'],
			filterValue: v => v.releaseStage
		},
		// ['lg','xl','xxl'].includes($bps) && 
		{
			key: 'connectorType',
			title: 'connectorType',
			value: (v) => v.connectorType,
			sortable: true,
			filterOptions: ['source', 'destination', 'internal', 'tutorial'],
			filterValue: v => v.connectorType.split('-')[0],
		}
	]
</script>

<DarkMode />

# Welcome to the MVP of the Connector Metadata Service!

This is BOTH a UI for visual exploration, AND a Restful API with these endpoints:

- GET `/connectors`
  - [/connectors](/connectors) - the smallest payload of connectors, minus internal connectors
    - listing `['name', 'dateAdded', 'displayName', 'description', 'websiteUrl', 'documentationUrl', 'iconUrl', 'releaseStage', 'connectorType']`
  - [/connectors?internal](/connectors?internal) - small payload of all connectors including internal connectors
  - [/connectors?full](/connectors?full) - just dumping the full `results.json`, which includes extra stuff like docker name, version, sourceDefinitionId, etc
- GET `/connector/{connector_name}`
  - return full info for a single connector
  - 404 if unrecognized name

## Docs

Source of this service is at
https://github.com/airbytehq/mvp-cms

<details>
	<summary>
		Expand to see README
	</summary>


	<Readme />

</details>

## All known connectors

<!-- nice tailwind flex div that vertically centers -->
<div class="flex items-center gap-4">
	<button type="button" on:click={toggleLogos} class:bg-indigo-600={$showLogos} class:bg-gray-200={!$showLogos} class="bg-gray-200 dark:bg-gray-800 relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2" role="switch" aria-checked="false">
		<!-- Enabled: "translate-x-5", Not Enabled: "translate-x-0" -->
		<span aria-hidden="true" class:translate-x-5={$showLogos} class:translate-x-0={!$showLogos} class="translate-x-0 pointer-events-none inline-block h-5 w-5 transform rounded-full bg-white dark:bg-gray-800 shadow ring-0 transition duration-200 ease-in-out"></span>
	</button>
	<span>Display logos (may cause heavy image load)</span>
</div>
<!-- <div class="flex items-center gap-4">
	<button type="button" on:click={toggleInternal} class:bg-indigo-600={$showLogos} class:bg-gray-200={!$showInternalConnectors} class="bg-gray-200 relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2" role="switch" aria-checked="false">
		<span aria-hidden="true" class:translate-x-5={$showInternalConnectors} class:translate-x-0={!$showLogos} class="translate-x-0 pointer-events-none inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out"></span>
	</button>
	<span>Show internal connectors</span>
</div> -->

<!-- <pre>
{JSON.stringify(data, null, 2)}
</pre> -->

<SvelteTable
  classNameTable="table"
	classNameSelect="dark:text-black"
  classNameThead="table-header-group sticky top-0 bg-white dark:bg-blue-900"
  classNameTbody="h-[200px] overflow-y-auto"
	{columns}
	{rows}
	expanded={['description', 'documentationUrl', 'websiteUrl', 'iconUrl']}
	showExpandIcon
	expandSingle={true}
	rowKey="name"
>
	<svelte:fragment slot="expanded" let:row>
		{#if row.iconUrl}
			<img class="h-16" alt="logo" src={row.iconUrl} />
		{/if}
		{#if row.description}
			<p>Docs: <a href={row.documentationUrl}>{row.documentationUrl}</a></p>
			<p>Website: <a href={row.websiteUrl}>{row.websiteUrl}</a></p>
			<p>Date added: <a href={row.websiteUrl}>{row.websiteUrl}</a></p>
			<p>{row.description}</p>
		{/if}
	</svelte:fragment>
</SvelteTable>
